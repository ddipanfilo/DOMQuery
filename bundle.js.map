{"version":3,"sources":["webpack:///webpack/bootstrap 1d906c9ea2d9b3fbe5b6","webpack:///./js/main.js","webpack:///./js/snake-view.js","webpack:///./js/board.js","webpack:///./js/snake.js","webpack:///./js/coordinates.js","webpack:///./js/apple.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;AAEA;AACA;AACA;AACA,EAAC;;;;;;;ACLD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAmB,iCAAiC;AACpD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0CAAyC,UAAU;;AAEnD;AACA,iDAAgD,aAAa;AAC7D;AACA;;AAEA,eAAc;;AAEd;;;;;;;AC9EA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AClBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oBAAmB,8BAA8B;AACjD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;AC1FA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;ACrBA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA","file":"./bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 1d906c9ea2d9b3fbe5b6\n **/","const View = require('./snake-view.js');\n\n$l(() => {\n  const rootEl = $l('.snake-game');\n  new View(rootEl);\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/main.js\n ** module id = 0\n ** module chunks = 0\n **/","const Board = require('./board.js');\n\nclass View {\n  constructor($el) {\n    this.$el = $el;\n    this.board = new Board(20);\n    this.setupBoard();\n\n    this.intervalId = window.setInterval(this.step.bind(this), 100);\n\n    $l(window).on(\"keydown\", this.handleKeyEvent.bind(this));\n\n    this.populateScores();\n  }\n\n  handleKeyEvent(e) {\n    if (View.MOVES[e.keyCode]) {\n      this.board.snake.turn(View.MOVES[event.keyCode]);\n    }\n  }\n\n  setupBoard(){\n    const $board = $l('<ul>');\n    $board.addClass(\"board\");\n\n    for (let i = 0; i < Math.pow(this.board.dim, 2); i++) {\n      let $li = $l('<li>');\n      $board.append($li);\n    }\n\n    this.$el.append($board);\n    this.$lis = this.$el.find(\"li\");\n  }\n\n  render(){\n    let snakeCoordinates = this.board.snake.segments;\n    let appleCoordinates = [this.board.apple.position];\n\n    (this.$lis).removeClass(\"snake\");\n    (this.$lis).removeClass(\"apple\");\n\n    snakeCoordinates.forEach(coordinate => {\n      let flatCoordinateIndex = (coordinate.i * this.board.dim) + coordinate.j;\n      this.$lis.eq(flatCoordinateIndex).addClass(\"snake\");\n    });\n\n    appleCoordinates.forEach(coordinate => {\n      let flatCoordinateIndex = (coordinate.i * this.board.dim) + coordinate.j;\n      this.$lis.eq(flatCoordinateIndex).addClass(\"apple\");\n    });\n\n    this.populateScores();\n  }\n\n  step() {\n    if (this.board.snake.segments.length > 0) {\n      this.board.snake.move();\n      this.render();\n    } else {\n      const currentScore = this.board.score;\n      if (currentScore > parseInt(window.localStorage.highScore)) {\n        localStorage.setItem(\"highScore\", currentScore);\n      }\n      window.clearInterval(this.intervalId);\n    }\n  }\n\n  populateScores(){\n    let highScore = localStorage.getItem(\"highScore\") || 150;\n    $l(\".high-score\").text(`Highscore: ${highScore}`);\n\n    let currentScore = this.board.score;\n    $l(\".current-score\").text(`Current Score: ${currentScore}`);\n  }\n}\n\nView.MOVES = { 38: \"N\", 40: \"S\", 39: \"E\", 37: \"W\"};\n\nmodule.exports = View;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/snake-view.js\n ** module id = 1\n ** module chunks = 0\n **/","const Snake = require('./snake');\nconst Apple = require('./apple');\n\nclass Board {\n  constructor(dim) {\n    this.dim = dim;\n\n    this.snake = new Snake(this);\n    this.apple = new Apple(this);\n    this.score = 0;\n  }\n\n  validPosition(coordinate) {\n    return (coordinate.i >= 0) && (coordinate.i < this.dim) &&\n    (coordinate.j >= 0) && (coordinate.j < this.dim);\n  }\n}\n\nmodule.exports = Board;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/board.js\n ** module id = 2\n ** module chunks = 0\n **/","const Coordinates = require('./coordinates');\n\nclass Snake {\n  constructor(board) {\n    this.board = board;\n    this.direction = \"N\";\n    this.turning = false;\n    const center = new Coordinates(12, 8);\n    this.segments = [center];\n    this.growTurns = 0;\n  }\n\n  head(){\n    return this.segments.slice(-1)[0];\n  }\n\n  move(){\n    this.segments.push(this.head().plus(Snake.DIRECTIONS[this.direction]));\n    this.turning = false;\n\n    if (this.eatApple()) {\n      this.board.apple.spawn();\n      this.board.score += 10;\n    }\n\n    if (this.growTurns > 0) {\n      this.growTurns -= 1;\n    } else {\n      this.segments.shift();\n    }\n\n    if (!this.validMove()) {\n      this.segments = [];\n    }\n  }\n\n  eatApple(){\n    if (this.head().equals(this.board.apple.position)) {\n      this.growTurns += 2;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  validMove(){\n    if (!this.board.validPosition(this.head())) {\n      return false;\n    }\n\n    for (let i = 0; i < this.segments.length - 1; i++) {\n      if (this.segments[i].equals(this.head())) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  turn(direction){\n    if (!(Snake.DIRECTIONS[this.direction].isOpposite(Snake.DIRECTIONS[direction]) ||\n      this.turning)) {\n      this.turning = true;\n      this.direction = direction;\n    }\n  }\n\n  occupying(array){\n    let result = false;\n\n    this.segments.forEach( segment => {\n      if (segment.i === array[0] && segment.j === array[1]) {\n        result = true;\n        return true;\n      }\n    });\n\n    return result;\n  }\n}\n\nSnake.DIRECTIONS = {\n  \"N\": new Coordinates(-1, 0),\n  \"S\": new Coordinates(1, 0),\n  \"E\": new Coordinates(0, 1),\n  \"W\": new Coordinates(0, -1)\n};\n\nSnake.symbol = \"S\";\n\nmodule.exports = Snake;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/snake.js\n ** module id = 3\n ** module chunks = 0\n **/","class Coordinates {\n  constructor(i, j) {\n    this.i = i;\n    this.j = j;\n  }\n\n  equals(coordinate2) {\n    if ((this.i === coordinate2.i) && (this.j === coordinate2.j)) {\n      return (this.i === coordinate2.i) && (this.j === coordinate2.j);\n    }\n  }\n\n  plus(coordinate2) {\n    return new Coordinates(this.i + coordinate2.i, this.j + coordinate2.j);\n  }\n\n  isOpposite(coordinate2){\n    return (this.i === -1 * coordinate2.i) && (this.j === (-1 * coordinate2.j));\n  }\n}\n\nmodule.exports = Coordinates;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/coordinates.js\n ** module id = 4\n ** module chunks = 0\n **/","const Coordinate = require(\"./coordinates\");\n\nclass Apple {\n  constructor(board) {\n    this.board = board;\n    this.spawn();\n  }\n\n  spawn() {\n    let x = Math.floor(Math.random() * this.board.dim);\n    let y = Math.floor(Math.random() * this.board.dim);\n\n    while (this.board.snake.occupying([x, y])) {\n      x = Math.floor(Math.random() * this.board.dim);\n      y = Math.floor(Math.random() * this.board.dim);\n    }\n\n    this.position = new Coordinate(x, y);\n  }\n}\n\nmodule.exports = Apple;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/apple.js\n ** module id = 5\n ** module chunks = 0\n **/"],"sourceRoot":""}